version: '3.1'
services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.9.2
    container_name: elasticsearch
    restart: always
    ports:
      - 127.0.0.1:9200:9200
      - 127.0.0.1:9300:9300
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms1536m -Xmx1536m -Dlog4j2.formatMsgNoLookups=true"
    volumes:
      - esData_7:/usr/share/elasticsearch/data:rw
    networks:
      - openrxv
  frontend:
    container_name: frontend
    image: frontend
    build: frontend
    restart: always
    ports:
      - 80:80
    depends_on:
      - elasticsearch
      - backend
    networks:
      - openrxv
  redis:
    container_name: redis
    image: docker.io/redis:7
    restart: always
    volumes:
      - redisData:/data
    ports:
      - 127.0.0.1:6379:6379
    networks:
      - openrxv
  bullboard_openrxv:
    container_name: bullboard_openrxv
    image: deadly0/bull-board
    restart: always
    volumes:
      - ./redisData:/data
    ports:
      - 3457:3000
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
    networks:
      - openrxv
  kibana:
    container_name: kibana
    restart: always
    image: docker.elastic.co/kibana/kibana:8.9.2
    depends_on:
      - elasticsearch
    ports:
      - 127.0.0.1:5601:5601
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    networks:
      - openrxv
  backend:
    container_name: backend
    restart: always
    image: backend
    build: backend
    ports:
      - 127.0.0.1:3000:3000
    depends_on:
      - elasticsearch
      - redis
    networks:
      - openrxv
    volumes:
      - ./backend/data:/backend/data
volumes:
  esData_7:
  redisData:
networks:
  openrxv:
